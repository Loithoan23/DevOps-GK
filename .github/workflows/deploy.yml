name: CRUD App CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Job 1: Continuous Integration - Kiểm tra chất lượng code
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run tests if present
        # --if-present sẽ chỉ chạy script nếu nó tồn tại trong package.json
        # Job sẽ thất bại nếu script chạy và trả về lỗi.
        run: npm run test --if-present

      - name: Run lint if present
        run: npm run lint --if-present

  # Job 2: Continuous Deployment - Build và Deploy lên server
  deploy:
    # Job này cần job 'ci' chạy thành công trước
    needs: ci
    # Chỉ chạy khi có push vào nhánh main
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/crud-app:latest

      - name: Deploy to production server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # Di chuyển vào thư mục dự án trên server (tạo nếu chưa có)
            cd ~/crud-app || exit 1

            # Ghi file docker-compose cho production từ secret
            echo "${{ secrets.DOCKER_COMPOSE_PROD_FILE }}" > docker-compose.prod.yml

            # Đăng nhập vào Docker Hub trên server
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            # Pull image mới nhất
            docker pull ${{ secrets.DOCKER_USERNAME }}/crud-app:latest

            # Dừng và xóa container cũ
            docker ps -a --filter "name=crud-app-backend" --format '{{.ID}}' | xargs -r docker stop || true
            docker ps -a --filter "name=crud-app-backend" --format '{{.ID}}' | xargs -r docker rm || true

            # Khởi động container mới bằng file compose của production
            docker-compose -f docker-compose.prod.yml up -d

            # Dọn dẹp các image cũ không còn được sử dụng
            docker image prune -f